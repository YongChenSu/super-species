{"version":3,"sources":["components/Container/Container.js","../node_modules/@material-ui/core/esm/Container/Container.js","WebAPI.js","pages/MessagePage/MessagePage.jsx"],"names":["StyledContainer","styled","Container","props","theme","color","darkGray","maxWidthOnMobile","paddingOnMobile","defaultHeight","PAGE_HEIGHT","MEDIA_QUERY_LG","maxWidthOnDesktop","paddingOnDeskTop","React","ref","classes","className","_props$component","component","Component","_props$disableGutters","disableGutters","_props$fixed","fixed","_props$maxWidth","maxWidth","other","_objectWithoutProperties","_extends","clsx","root","concat","capitalize","String","withStyles","_defineProperty","width","marginLeft","boxSizing","marginRight","paddingLeft","spacing","paddingRight","display","breakpoints","up","Object","keys","values","reduce","acc","breakpoint","value","maxWidthXs","Math","max","xs","maxWidthSm","sm","maxWidthMd","md","maxWidthLg","lg","maxWidthXl","xl","name","BASE_URL","Root","div","PostHeader","PostTitle","CreatedAt","PostContent","Button","Link","PostDate","PostContainer","PostList","post","id","to","title","Date","createdAt","toLocaleString","Post","posts","history","map","body","onClick","goBack","MessagePage","useHistory","useParams","useState","setPosts","setPost","useEffect","fetch","then","res","json","getPost"],"mappings":"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","file":"static/js/4.b12773df.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\nimport { Container } from \"@material-ui/core\";\r\nimport { MEDIA_QUERY_LG, PAGE_HEIGHT } from \"../../constant/style\";\r\n\r\nconst StyledContainer = styled(Container)`\r\n  && {\r\n    color: ${(props) => props.theme.color.darkGray};\r\n    max-width: ${(props) => props.maxWidthOnMobile};\r\n    padding: ${(props) => props.paddingOnMobile};\r\n    border: ${(props) => `1px solid ${props.theme.color.darkGray}`};\r\n    height: ${(props) =>\r\n      props.defaultHeight === \"true\" ? `${PAGE_HEIGHT}` : \"\"};\r\n\r\n    ${MEDIA_QUERY_LG} {\r\n      max-width: ${(props) => props.maxWidthOnDesktop};\r\n      padding: ${(props) => props.paddingOnDeskTop};\r\n    }\r\n  }\r\n`;\r\n\r\nexport default StyledContainer;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _defineProperty({\n      width: '100%',\n      marginLeft: 'auto',\n      boxSizing: 'border-box',\n      marginRight: 'auto',\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2),\n      display: 'block'\n    }, theme.breakpoints.up('sm'), {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    }),\n\n    /* Styles applied to the root element if `disableGutters={true}`. */\n    disableGutters: {\n      paddingLeft: 0,\n      paddingRight: 0\n    },\n\n    /* Styles applied to the root element if `fixed={true}`. */\n    fixed: Object.keys(theme.breakpoints.values).reduce(function (acc, breakpoint) {\n      var value = theme.breakpoints.values[breakpoint];\n\n      if (value !== 0) {\n        acc[theme.breakpoints.up(breakpoint)] = {\n          maxWidth: value\n        };\n      }\n\n      return acc;\n    }, {}),\n\n    /* Styles applied to the root element if `maxWidth=\"xs\"`. */\n    maxWidthXs: _defineProperty({}, theme.breakpoints.up('xs'), {\n      maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"sm\"`. */\n    maxWidthSm: _defineProperty({}, theme.breakpoints.up('sm'), {\n      maxWidth: theme.breakpoints.values.sm\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"md\"`. */\n    maxWidthMd: _defineProperty({}, theme.breakpoints.up('md'), {\n      maxWidth: theme.breakpoints.values.md\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"lg\"`. */\n    maxWidthLg: _defineProperty({}, theme.breakpoints.up('lg'), {\n      maxWidth: theme.breakpoints.values.lg\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"xl\"`. */\n    maxWidthXl: _defineProperty({}, theme.breakpoints.up('xl'), {\n      maxWidth: theme.breakpoints.values.xl\n    })\n  };\n};\nvar Container = /*#__PURE__*/React.forwardRef(function Container(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      _props$fixed = props.fixed,\n      fixed = _props$fixed === void 0 ? false : _props$fixed,\n      _props$maxWidth = props.maxWidth,\n      maxWidth = _props$maxWidth === void 0 ? 'lg' : _props$maxWidth,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"disableGutters\", \"fixed\", \"maxWidth\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, fixed && classes.fixed, disableGutters && classes.disableGutters, maxWidth !== false && classes[\"maxWidth\".concat(capitalize(String(maxWidth)))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  children: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   */\n  fixed: PropTypes.bool,\n\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   */\n  maxWidth: PropTypes.oneOf(['lg', 'md', 'sm', 'xl', 'xs', false])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiContainer'\n})(Container);","const BASE_URL = \"https://student-json-api.lidemy.me\";\r\nconst API_ENDPOINT =\r\n  \"https://student-json-api.lidemy.me/comments?_sort=createdAt&_order=desc\";\r\n\r\nexport const fetchComments = () => {\r\n  return fetch(API_ENDPOINT).then((res) => res.json());\r\n};\r\n\r\nexport const getPosts = () => {\r\n  return fetch(`${BASE_URL}/posts?_sort=createdAt&_order=desc`).then((res) =>\r\n    res.json()\r\n  );\r\n};\r\n\r\nexport const getPost = (id) => {\r\n  return fetch(`${BASE_URL}/posts?id=${id}`).then((res) => res.json());\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { getPosts, getPost } from \"../../WebAPI\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Hidden } from \"@material-ui/core/\";\r\nimport Container from \"../../components/Container\";\r\nimport styled from \"styled-components\";\r\nimport { MEDIA_QUERY_LG, PAGE_HEIGHT } from \"../../constant/style\";\r\n\r\nconst Root = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n`;\r\n\r\nconst PostHeader = styled.div`\r\n  width: 40%;\r\n  ${MEDIA_QUERY_LG} {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst PostTitle = styled.div`\r\n  font-weight: 900;\r\n  font-size: 30px;\r\n  margin-bottom: 15px;\r\n`;\r\n\r\nconst CreatedAt = styled.div`\r\n  color: #888;\r\n  font-weight: bold;\r\n  padding: 10px 0px;\r\n  border-bottom: solid 1px #ddd;\r\n`;\r\n\r\nconst PostContent = styled.div`\r\n  padding: 15px 0px;\r\n  border-bottom: solid 1px #ddd;\r\n  line-height: 26px;\r\n  color: #333;\r\n\r\n  width: 60%;\r\n  ${MEDIA_QUERY_LG} {\r\n    width: 0%;\r\n  }\r\n`;\r\n\r\nconst Button = styled(Link)`\r\n  border: solid 2px #888;\r\n  border-radius: 20px;\r\n  padding: 8px 10px;\r\n  box-shadow: 5px 5px 0px #ccc;\r\n  max-width: 100px;\r\n  text-align: center;\r\n  margin-top: 20px;\r\n  cursor: pointer;\r\n  &:hover {\r\n    transform: translateX(-10px);\r\n    box-shadow: 5px 5px 0px #888;\r\n  }\r\n`;\r\n\r\nconst PostDate = styled.div`\r\n  color: rgba(0, 0, 0, 0.8);\r\n`;\r\n\r\nconst PostContainer = styled(Link)`\r\n  border-bottom: 1px solid rgba(0, 12, 34, 0.2);\r\n  padding: 1rem;\r\n  display: flex;\r\n  align-items: flex-start;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  text-align: justify;\r\n  word-break: break-word;\r\n  text-decoration: none;\r\n`;\r\n\r\nconst PostList = ({ post }) => {\r\n  return (\r\n    <PostContainer id={`${post.id}`} to={`/post/${post.id}`}>\r\n      <PostTitle id={`${post.id}`}>{post.title}</PostTitle>\r\n      <PostDate id={`${post.id}`}>\r\n        {new Date(post.createdAt).toLocaleString()}\r\n      </PostDate>\r\n    </PostContainer>\r\n  );\r\n};\r\n\r\nconst Post = ({ posts, post, history }) => {\r\n  if (!post) return null;\r\n\r\n  return (\r\n    <Container maxWidthOnDesktop=\"60vw\" maxWidthOnMobile=\"100vw\">\r\n      <Root>\r\n        <PostHeader>\r\n          {posts.map((post) => (\r\n            <PostList key={post.id} post={post} />\r\n          ))}\r\n        </PostHeader>\r\n\r\n        <PostContent>\r\n          <PostTitle>{post.title}</PostTitle>\r\n          <CreatedAt>{new Date(post.createdAt).toLocaleString()}</CreatedAt>\r\n          <PostContent>{post.body}</PostContent>\r\n          <Button onClick={() => history.goBack()}>上一頁</Button>\r\n        </PostContent>\r\n      </Root>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default function MessagePage() {\r\n  let history = useHistory();\r\n  const { id } = useParams();\r\n  const [posts, setPosts] = useState([]);\r\n  const [post, setPost] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    getPosts().then((posts) => setPosts(posts));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getPost(id).then((post) => setPost(post[0]));\r\n  }, [id]);\r\n\r\n  return (\r\n    <>\r\n      <Post posts={posts} post={post} history={history} />\r\n    </>\r\n  );\r\n}\r\n"],"sourceRoot":""}