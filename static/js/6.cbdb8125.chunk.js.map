{"version":3,"sources":["WebAPI.js","../node_modules/@material-ui/core/esm/Grid/Grid.js","../node_modules/@material-ui/core/esm/TextareaAutosize/TextareaAutosize.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components/Reply/Reply.jsx","components/Comment/Comment.jsx","pages/BoardPage/BoardPage.jsx"],"names":["BASE_URL","fetchComments","fetch","then","res","json","getPosts","getPost","id","SPACINGS","GRID_SIZES","getOffset","val","div","arguments","length","undefined","parse","parseFloat","concat","String","replace","Grid","React","props","ref","_props$alignContent","alignContent","_props$alignItems","alignItems","classes","classNameProp","className","_props$component","component","Component","_props$container","container","_props$direction","direction","_props$item","item","_props$justify","justify","_props$lg","lg","_props$md","md","_props$sm","sm","_props$spacing","spacing","_props$wrap","wrap","_props$xl","xl","_props$xs","xs","_props$zeroMinWidth","zeroMinWidth","other","_objectWithoutProperties","clsx","root","_extends","StyledGrid","withStyles","theme","boxSizing","display","flexWrap","width","margin","minWidth","flexDirection","justifyContent","breakpoint","styles","forEach","themeSpacing","padding","generateGutter","breakpoints","keys","reduce","accumulator","key","globalStyles","size","Math","round","flexBasis","flexGrow","maxWidth","up","generateGrid","name","getStyleValue","computedStyle","property","parseInt","useEnhancedEffect","window","visibility","position","overflow","height","top","left","transform","TextareaAutosize","onChange","rows","rowsMax","_props$rowsMin","rowsMin","rowsMinProp","style","value","isControlled","current","inputRef","handleRef","useForkRef","shadowRef","renders","_React$useState","state","setState","syncHeight","input","getComputedStyle","inputShallow","placeholder","slice","border","innerHeight","scrollHeight","singleRowHeight","outerHeight","max","Number","min","outerHeightStyle","abs","prevState","handleResize","debounce","addEventListener","clear","removeEventListener","event","readOnly","tabIndex","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","MessageHead","styled","MessageAuthor","MessageTime","Reply","latestComments","author","time","body","MessageForm","form","MessageTextarea","SubmitButton","Button","MessageContainer","DeleteButton","MessageBody","Comment","handleDeleteData","children","useState","setComments","setMessageApiError","setValue","setPostMessageError","isLoadingPostMessage","setIsLoadingPostMessage","setLatestComments","useEffect","data","catch","error","message","onClick","onSubmit","e","preventDefault","method","headers","JSON","stringify","nickname","response","ok","aria-label","onFocus","target","type","variant","color","console","log","map","Loading","ErrorMessage","Title","h1","CommentList","BoardPage","comments","commentApiError","setCommentApiError","postMessageError","toString","Date","createdAt","toLocaleString"],"mappings":"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","file":"static/js/6.cbdb8125.chunk.js","sourcesContent":["const BASE_URL = \"https://student-json-api.lidemy.me\";\r\nconst API_ENDPOINT =\r\n  \"https://student-json-api.lidemy.me/comments?_sort=createdAt&_order=desc\";\r\n\r\nexport const fetchComments = () => {\r\n  return fetch(API_ENDPOINT).then((res) => res.json());\r\n};\r\n\r\nexport const getPosts = () => {\r\n  return fetch(`${BASE_URL}/posts?_sort=createdAt&_order=desc`).then((res) =>\r\n    res.json()\r\n  );\r\n};\r\n\r\nexport const getPost = (id) => {\r\n  return fetch(`${BASE_URL}/posts?id=${id}`).then((res) => res.json());\r\n};\r\n","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n// A grid component using the following libs as inspiration.\n//\n// For the implementation:\n// - https://getbootstrap.com/docs/4.3/layout/grid/\n// - https://github.com/kristoferjoseph/flexboxgrid/blob/master/src/css/flexboxgrid.css\n// - https://github.com/roylee0704/react-flexbox-grid\n// - https://material.angularjs.org/latest/layout/introduction\n//\n// Follow this flexbox Guide to better understand the underlying model:\n// - https://css-tricks.com/snippets/css/a-guide-to-flexbox/\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport requirePropFactory from '../utils/requirePropFactory';\nvar SPACINGS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nvar GRID_SIZES = ['auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n\nfunction generateGrid(globalStyles, theme, breakpoint) {\n  var styles = {};\n  GRID_SIZES.forEach(function (size) {\n    var key = \"grid-\".concat(breakpoint, \"-\").concat(size);\n\n    if (size === true) {\n      // For the auto layouting\n      styles[key] = {\n        flexBasis: 0,\n        flexGrow: 1,\n        maxWidth: '100%'\n      };\n      return;\n    }\n\n    if (size === 'auto') {\n      styles[key] = {\n        flexBasis: 'auto',\n        flexGrow: 0,\n        maxWidth: 'none'\n      };\n      return;\n    } // Keep 7 significant numbers.\n\n\n    var width = \"\".concat(Math.round(size / 12 * 10e7) / 10e5, \"%\"); // Close to the bootstrap implementation:\n    // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\n\n    styles[key] = {\n      flexBasis: width,\n      flexGrow: 0,\n      maxWidth: width\n    };\n  }); // No need for a media query for the first size.\n\n  if (breakpoint === 'xs') {\n    _extends(globalStyles, styles);\n  } else {\n    globalStyles[theme.breakpoints.up(breakpoint)] = styles;\n  }\n}\n\nfunction getOffset(val) {\n  var div = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  var parse = parseFloat(val);\n  return \"\".concat(parse / div).concat(String(val).replace(String(parse), '') || 'px');\n}\n\nfunction generateGutter(theme, breakpoint) {\n  var styles = {};\n  SPACINGS.forEach(function (spacing) {\n    var themeSpacing = theme.spacing(spacing);\n\n    if (themeSpacing === 0) {\n      return;\n    }\n\n    styles[\"spacing-\".concat(breakpoint, \"-\").concat(spacing)] = {\n      margin: \"-\".concat(getOffset(themeSpacing, 2)),\n      width: \"calc(100% + \".concat(getOffset(themeSpacing), \")\"),\n      '& > $item': {\n        padding: getOffset(themeSpacing, 2)\n      }\n    };\n  });\n  return styles;\n} // Default CSS values\n// flex: '0 1 auto',\n// flexDirection: 'row',\n// alignItems: 'flex-start',\n// flexWrap: 'nowrap',\n// justifyContent: 'flex-start',\n\n\nexport var styles = function styles(theme) {\n  return _extends({\n    /* Styles applied to the root element. */\n    root: {},\n\n    /* Styles applied to the root element if `container={true}`. */\n    container: {\n      boxSizing: 'border-box',\n      display: 'flex',\n      flexWrap: 'wrap',\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `item={true}`. */\n    item: {\n      boxSizing: 'border-box',\n      margin: '0' // For instance, it's useful when used with a `figure` element.\n\n    },\n\n    /* Styles applied to the root element if `zeroMinWidth={true}`. */\n    zeroMinWidth: {\n      minWidth: 0\n    },\n\n    /* Styles applied to the root element if `direction=\"column\"`. */\n    'direction-xs-column': {\n      flexDirection: 'column'\n    },\n\n    /* Styles applied to the root element if `direction=\"column-reverse\"`. */\n    'direction-xs-column-reverse': {\n      flexDirection: 'column-reverse'\n    },\n\n    /* Styles applied to the root element if `direction=\"row-reverse\"`. */\n    'direction-xs-row-reverse': {\n      flexDirection: 'row-reverse'\n    },\n\n    /* Styles applied to the root element if `wrap=\"nowrap\"`. */\n    'wrap-xs-nowrap': {\n      flexWrap: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `wrap=\"reverse\"`. */\n    'wrap-xs-wrap-reverse': {\n      flexWrap: 'wrap-reverse'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"center\"`. */\n    'align-items-xs-center': {\n      alignItems: 'center'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-start\"`. */\n    'align-items-xs-flex-start': {\n      alignItems: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-end\"`. */\n    'align-items-xs-flex-end': {\n      alignItems: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"baseline\"`. */\n    'align-items-xs-baseline': {\n      alignItems: 'baseline'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"center\"`. */\n    'align-content-xs-center': {\n      alignContent: 'center'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-start\"`. */\n    'align-content-xs-flex-start': {\n      alignContent: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-end\"`. */\n    'align-content-xs-flex-end': {\n      alignContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-between\"`. */\n    'align-content-xs-space-between': {\n      alignContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-around\"`. */\n    'align-content-xs-space-around': {\n      alignContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justify=\"center\"`. */\n    'justify-xs-center': {\n      justifyContent: 'center'\n    },\n\n    /* Styles applied to the root element if `justify=\"flex-end\"`. */\n    'justify-xs-flex-end': {\n      justifyContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-between\"`. */\n    'justify-xs-space-between': {\n      justifyContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-around\"`. */\n    'justify-xs-space-around': {\n      justifyContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-evenly\"`. */\n    'justify-xs-space-evenly': {\n      justifyContent: 'space-evenly'\n    }\n  }, generateGutter(theme, 'xs'), theme.breakpoints.keys.reduce(function (accumulator, key) {\n    // Use side effect over immutability for better performance.\n    generateGrid(accumulator, theme, key);\n    return accumulator;\n  }, {}));\n};\nvar Grid = /*#__PURE__*/React.forwardRef(function Grid(props, ref) {\n  var _props$alignContent = props.alignContent,\n      alignContent = _props$alignContent === void 0 ? 'stretch' : _props$alignContent,\n      _props$alignItems = props.alignItems,\n      alignItems = _props$alignItems === void 0 ? 'stretch' : _props$alignItems,\n      classes = props.classes,\n      classNameProp = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$container = props.container,\n      container = _props$container === void 0 ? false : _props$container,\n      _props$direction = props.direction,\n      direction = _props$direction === void 0 ? 'row' : _props$direction,\n      _props$item = props.item,\n      item = _props$item === void 0 ? false : _props$item,\n      _props$justify = props.justify,\n      justify = _props$justify === void 0 ? 'flex-start' : _props$justify,\n      _props$lg = props.lg,\n      lg = _props$lg === void 0 ? false : _props$lg,\n      _props$md = props.md,\n      md = _props$md === void 0 ? false : _props$md,\n      _props$sm = props.sm,\n      sm = _props$sm === void 0 ? false : _props$sm,\n      _props$spacing = props.spacing,\n      spacing = _props$spacing === void 0 ? 0 : _props$spacing,\n      _props$wrap = props.wrap,\n      wrap = _props$wrap === void 0 ? 'wrap' : _props$wrap,\n      _props$xl = props.xl,\n      xl = _props$xl === void 0 ? false : _props$xl,\n      _props$xs = props.xs,\n      xs = _props$xs === void 0 ? false : _props$xs,\n      _props$zeroMinWidth = props.zeroMinWidth,\n      zeroMinWidth = _props$zeroMinWidth === void 0 ? false : _props$zeroMinWidth,\n      other = _objectWithoutProperties(props, [\"alignContent\", \"alignItems\", \"classes\", \"className\", \"component\", \"container\", \"direction\", \"item\", \"justify\", \"lg\", \"md\", \"sm\", \"spacing\", \"wrap\", \"xl\", \"xs\", \"zeroMinWidth\"]);\n\n  var className = clsx(classes.root, classNameProp, container && [classes.container, spacing !== 0 && classes[\"spacing-xs-\".concat(String(spacing))]], item && classes.item, zeroMinWidth && classes.zeroMinWidth, direction !== 'row' && classes[\"direction-xs-\".concat(String(direction))], wrap !== 'wrap' && classes[\"wrap-xs-\".concat(String(wrap))], alignItems !== 'stretch' && classes[\"align-items-xs-\".concat(String(alignItems))], alignContent !== 'stretch' && classes[\"align-content-xs-\".concat(String(alignContent))], justify !== 'flex-start' && classes[\"justify-xs-\".concat(String(justify))], xs !== false && classes[\"grid-xs-\".concat(String(xs))], sm !== false && classes[\"grid-sm-\".concat(String(sm))], md !== false && classes[\"grid-md-\".concat(String(md))], lg !== false && classes[\"grid-lg-\".concat(String(lg))], xl !== false && classes[\"grid-xl-\".concat(String(xl))]);\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: className,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Grid.propTypes = {\n  /**\n   * Defines the `align-content` style property.\n   * It's applied for all screen sizes.\n   */\n  alignContent: PropTypes.oneOf(['stretch', 'center', 'flex-start', 'flex-end', 'space-between', 'space-around']),\n\n  /**\n   * Defines the `align-items` style property.\n   * It's applied for all screen sizes.\n   */\n  alignItems: PropTypes.oneOf(['flex-start', 'center', 'flex-end', 'stretch', 'baseline']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the component will have the flex *container* behavior.\n   * You should be wrapping *items* with a *container*.\n   */\n  container: PropTypes.bool,\n\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   */\n  direction: PropTypes.oneOf(['row', 'row-reverse', 'column', 'column-reverse']),\n\n  /**\n   * If `true`, the component will have the flex *item* behavior.\n   * You should be wrapping *items* with a *container*.\n   */\n  item: PropTypes.bool,\n\n  /**\n   * Defines the `justify-content` style property.\n   * It is applied for all screen sizes.\n   */\n  justify: PropTypes.oneOf(['flex-start', 'center', 'flex-end', 'space-between', 'space-around', 'space-evenly']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `lg` breakpoint and wider screens if not overridden.\n   */\n  lg: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `md` breakpoint and wider screens if not overridden.\n   */\n  md: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `sm` breakpoint and wider screens if not overridden.\n   */\n  sm: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the space between the type `item` component.\n   * It can only be used on a type `container` component.\n   */\n  spacing: PropTypes.oneOf(SPACINGS),\n\n  /**\n   * Defines the `flex-wrap` style property.\n   * It's applied for all screen sizes.\n   */\n  wrap: PropTypes.oneOf(['nowrap', 'wrap', 'wrap-reverse']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `xl` breakpoint and wider screens.\n   */\n  xl: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for all the screen sizes with the lowest priority.\n   */\n  xs: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * If `true`, it sets `min-width: 0` on the item.\n   * Refer to the limitations section of the documentation to better understand the use case.\n   */\n  zeroMinWidth: PropTypes.bool\n} : void 0;\nvar StyledGrid = withStyles(styles, {\n  name: 'MuiGrid'\n})(Grid);\n\nif (process.env.NODE_ENV !== 'production') {\n  var requireProp = requirePropFactory('Grid');\n  StyledGrid.propTypes = _extends({}, StyledGrid.propTypes, {\n    alignContent: requireProp('container'),\n    alignItems: requireProp('container'),\n    direction: requireProp('container'),\n    justify: requireProp('container'),\n    lg: requireProp('item'),\n    md: requireProp('item'),\n    sm: requireProp('item'),\n    spacing: requireProp('container'),\n    wrap: requireProp('container'),\n    xs: requireProp('item'),\n    zeroMinWidth: requireProp('item')\n  });\n}\n\nexport default StyledGrid;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from '../utils/debounce';\nimport useForkRef from '../utils/useForkRef';\n\nfunction getStyleValue(computedStyle, property) {\n  return parseInt(computedStyle[property], 10) || 0;\n}\n\nvar useEnhancedEffect = typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect;\nvar styles = {\n  /* Styles applied to the shadow textarea element. */\n  shadow: {\n    // Visibility needed to hide the extra text area on iPads\n    visibility: 'hidden',\n    // Remove from the content flow\n    position: 'absolute',\n    // Ignore the scrollbar width\n    overflow: 'hidden',\n    height: 0,\n    top: 0,\n    left: 0,\n    // Create a new layer, increase the isolation of the computed values\n    transform: 'translateZ(0)'\n  }\n};\nvar TextareaAutosize = /*#__PURE__*/React.forwardRef(function TextareaAutosize(props, ref) {\n  var onChange = props.onChange,\n      rows = props.rows,\n      rowsMax = props.rowsMax,\n      _props$rowsMin = props.rowsMin,\n      rowsMinProp = _props$rowsMin === void 0 ? 1 : _props$rowsMin,\n      style = props.style,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"onChange\", \"rows\", \"rowsMax\", \"rowsMin\", \"style\", \"value\"]);\n\n  var rowsMin = rows || rowsMinProp;\n\n  var _React$useRef = React.useRef(value != null),\n      isControlled = _React$useRef.current;\n\n  var inputRef = React.useRef(null);\n  var handleRef = useForkRef(ref, inputRef);\n  var shadowRef = React.useRef(null);\n  var renders = React.useRef(0);\n\n  var _React$useState = React.useState({}),\n      state = _React$useState[0],\n      setState = _React$useState[1];\n\n  var syncHeight = React.useCallback(function () {\n    var input = inputRef.current;\n    var computedStyle = window.getComputedStyle(input);\n    var inputShallow = shadowRef.current;\n    inputShallow.style.width = computedStyle.width;\n    inputShallow.value = input.value || props.placeholder || 'x';\n\n    if (inputShallow.value.slice(-1) === '\\n') {\n      // Certain fonts which overflow the line height will cause the textarea\n      // to report a different scrollHeight depending on whether the last line\n      // is empty. Make it non-empty to avoid this issue.\n      inputShallow.value += ' ';\n    }\n\n    var boxSizing = computedStyle['box-sizing'];\n    var padding = getStyleValue(computedStyle, 'padding-bottom') + getStyleValue(computedStyle, 'padding-top');\n    var border = getStyleValue(computedStyle, 'border-bottom-width') + getStyleValue(computedStyle, 'border-top-width'); // The height of the inner content\n\n    var innerHeight = inputShallow.scrollHeight - padding; // Measure height of a textarea with a single row\n\n    inputShallow.value = 'x';\n    var singleRowHeight = inputShallow.scrollHeight - padding; // The height of the outer content\n\n    var outerHeight = innerHeight;\n\n    if (rowsMin) {\n      outerHeight = Math.max(Number(rowsMin) * singleRowHeight, outerHeight);\n    }\n\n    if (rowsMax) {\n      outerHeight = Math.min(Number(rowsMax) * singleRowHeight, outerHeight);\n    }\n\n    outerHeight = Math.max(outerHeight, singleRowHeight); // Take the box sizing into account for applying this value as a style.\n\n    var outerHeightStyle = outerHeight + (boxSizing === 'border-box' ? padding + border : 0);\n    var overflow = Math.abs(outerHeight - innerHeight) <= 1;\n    setState(function (prevState) {\n      // Need a large enough difference to update the height.\n      // This prevents infinite rendering loop.\n      if (renders.current < 20 && (outerHeightStyle > 0 && Math.abs((prevState.outerHeightStyle || 0) - outerHeightStyle) > 1 || prevState.overflow !== overflow)) {\n        renders.current += 1;\n        return {\n          overflow: overflow,\n          outerHeightStyle: outerHeightStyle\n        };\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (renders.current === 20) {\n          console.error(['Material-UI: Too many re-renders. The layout is unstable.', 'TextareaAutosize limits the number of renders to prevent an infinite loop.'].join('\\n'));\n        }\n      }\n\n      return prevState;\n    });\n  }, [rowsMax, rowsMin, props.placeholder]);\n  React.useEffect(function () {\n    var handleResize = debounce(function () {\n      renders.current = 0;\n      syncHeight();\n    });\n    window.addEventListener('resize', handleResize);\n    return function () {\n      handleResize.clear();\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [syncHeight]);\n  useEnhancedEffect(function () {\n    syncHeight();\n  });\n  React.useEffect(function () {\n    renders.current = 0;\n  }, [value]);\n\n  var handleChange = function handleChange(event) {\n    renders.current = 0;\n\n    if (!isControlled) {\n      syncHeight();\n    }\n\n    if (onChange) {\n      onChange(event);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"textarea\", _extends({\n    value: value,\n    onChange: handleChange,\n    ref: handleRef // Apply the rows prop to get a \"correct\" first SSR paint\n    ,\n    rows: rowsMin,\n    style: _extends({\n      height: state.outerHeightStyle,\n      // Need a large enough difference to allow scrolling.\n      // This prevents infinite rendering loop.\n      overflow: state.overflow ? 'hidden' : null\n    }, style)\n  }, other)), /*#__PURE__*/React.createElement(\"textarea\", {\n    \"aria-hidden\": true,\n    className: props.className,\n    readOnly: true,\n    ref: shadowRef,\n    tabIndex: -1,\n    style: _extends({}, styles.shadow, style)\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TextareaAutosize.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  placeholder: PropTypes.string,\n\n  /**\n   * Use `rowsMin` instead. The prop will be removed in v5.\n   *\n   * @deprecated\n   */\n  rows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Maximum number of rows to display.\n   */\n  rowsMax: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Minimum number of rows to display.\n   */\n  rowsMin: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  value: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string), PropTypes.number, PropTypes.string])\n} : void 0;\nexport default TextareaAutosize;","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import styled from \"styled-components\";\r\n\r\nconst MessageHead = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 0.25rem 0;\r\n  border-bottom: 2px solid rgba(32, 208, 170, 0.5);\r\n`;\r\n\r\nconst MessageAuthor = styled.div`\r\n  color: rgba(23, 33, 44, 0.5);\r\n  font-size: 1rem;\r\n`;\r\n\r\nconst MessageTime = styled.div`\r\n  margin: 0 0 0 0.5rem;\r\n`;\r\n\r\nconst Reply = ({ latestComments }) => {\r\n  return (\r\n    <>\r\n      <MessageHead>\r\n        <MessageAuthor>{latestComments.author}</MessageAuthor>\r\n        <MessageTime>{latestComments.time}</MessageTime>\r\n      </MessageHead>\r\n      <div>{latestComments.body}</div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Reply;\r\n","import { useState, useEffect, useMemo } from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { fetchComments } from \"../../WebAPI\";\r\nimport Reply from \"../Reply\";\r\nimport TextareaAutosize from \"@material-ui/core/TextareaAutosize\";\r\nimport styled from \"styled-components\";\r\n\r\nconst MessageForm = styled.form`\r\n  width: 100%;\r\n  margin: 1rem 0 0 0;\r\n`;\r\n\r\nconst MessageTextarea = styled(TextareaAutosize)`\r\n  box-sizing: border-box;\r\n  width: 100%;\r\n`;\r\n\r\nconst SubmitButton = styled(Button)``;\r\n\r\nconst MessageContainer = styled.div`\r\n  background-color: rgb(32, 178, 170, 0.3);\r\n  padding: 1rem;\r\n  margin: 0 0 1rem 0;\r\n  border-radius: 0.5rem;\r\n`;\r\n\r\nconst MessageHead = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 0.25rem 0;\r\n  border-bottom: 2px solid rgba(32, 208, 170, 0.5);\r\n`;\r\n\r\nconst MessageAuthor = styled.div`\r\n  color: rgba(23, 33, 44, 0.5);\r\n  font-size: 1rem;\r\n`;\r\n\r\nconst MessageTime = styled.div`\r\n  margin: 0 0 0 0.5rem;\r\n`;\r\n\r\nconst DeleteButton = styled(Button)`\r\n  border-radius: 0.5rem;\r\n  padding: 0.25rem;\r\n  color: #eee;\r\n  background-color: rgb(105, 156, 154, 0.6);\r\n  border: 2px solid rgb(105, 156, 154);\r\n  cursor: pointer;\r\n  &:hover {\r\n    background-color: rgb(105, 156, 154, 1);\r\n  }\r\n  &:focus {\r\n    outline: 0;\r\n  }\r\n`;\r\n\r\nconst MessageBody = styled.div`\r\n  font-size: 1.25rem;\r\n  padding: 0.25rem 0;\r\n`;\r\n\r\nconst Comment = ({ handleDeleteData, id, author, time, children }) => {\r\n  const [comments, setComments] = useState(null);\r\n  const [messageApiError, setMessageApiError] = useState(null);\r\n  const [value, setValue] = useState();\r\n  const [postMessageError, setPostMessageError] = useState();\r\n  const [isLoadingPostMessage, setIsLoadingPostMessage] = useState(false);\r\n  const [latestComments, setLatestComments] = useState([]);\r\n\r\n  const handleTextareaFocus = (e) => {\r\n    setPostMessageError(null);\r\n  };\r\n\r\n  const handleTextareaChange = (e) => {\r\n    setValue(e.target.value);\r\n  };\r\n\r\n  const handleReplySubmit = (e) => {\r\n    e.preventDefault();\r\n    if (isLoadingPostMessage) return;\r\n    setIsLoadingPostMessage(true);\r\n\r\n    fetch(\"https://student-json-api.lidemy.me/comments\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        nickname: \"yongchen\",\r\n        body: value,\r\n      }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setIsLoadingPostMessage(false);\r\n        if (data.ok === 0) {\r\n          setPostMessageError(data.message);\r\n        } else {\r\n          setValue(\"\");\r\n          fetchComments();\r\n          setLatestComments([...latestComments, data]);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        setIsLoadingPostMessage(false);\r\n        setPostMessageError(error.message);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchComments()\r\n      .then((data) => {\r\n        setComments(data);\r\n      })\r\n      .catch((error) => {\r\n        setMessageApiError(error.message);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <MessageContainer>\r\n        <MessageHead>\r\n          <MessageAuthor>{author}</MessageAuthor>\r\n          <MessageTime>{time}</MessageTime>\r\n        </MessageHead>\r\n        <MessageBody>\r\n          {children}\r\n          <DeleteButton onClick={() => handleDeleteData(id)}>刪除</DeleteButton>\r\n          <MessageForm onSubmit={handleReplySubmit}>\r\n            <MessageTextarea\r\n              aria-label=\"minimum height\"\r\n              rowsMin={2}\r\n              placeholder=\"回覆留言\"\r\n              value={value}\r\n              onFocus={handleTextareaFocus}\r\n              onChange={handleTextareaChange}\r\n            />\r\n            <Grid\r\n              container\r\n              direction=\"row\"\r\n              justify=\"flex-end\"\r\n              alignItems=\"stretch\"\r\n            >\r\n              <SubmitButton type=\"submit\" variant=\"outlined\" color=\"primary\">\r\n                回覆\r\n              </SubmitButton>\r\n            </Grid>\r\n          </MessageForm>\r\n          {console.log(\"Comment\")}\r\n          {latestComments !== \"\" &&\r\n            latestComments.map((latestComments) => (\r\n              <Reply latestComments={latestComments} />\r\n            ))}\r\n        </MessageBody>\r\n      </MessageContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Comment;\r\n","import { useState, useEffect, useMemo } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport TextareaAutosize from \"@material-ui/core/TextareaAutosize\";\r\nimport Comment from \"../../components/Comment\";\r\n\r\nconst API_ENDPOINT =\r\n  \"https://student-json-api.lidemy.me/comments?_sort=createdAt&_order=desc\";\r\n\r\nconst Loading = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  color: #ddd;\r\n  font-size: 3rem;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst ErrorMessage = styled.div`\r\n  color: lightsalmon;\r\n  font-size: 2rem;\r\n  font-weight: bold;\r\n  padding: 1rem 0;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  color: #333;\r\n`;\r\n\r\nconst MessageForm = styled.form`\r\n  width: 100%;\r\n  margin: 1rem 0 0 0;\r\n`;\r\n\r\nconst MessageTextarea = styled(TextareaAutosize)`\r\n  box-sizing: border-box;\r\n  width: 100%;\r\n`;\r\n\r\nconst SubmitButton = styled(Button)``;\r\n\r\nconst CommentList = styled.div`\r\n  margin: 1rem 0 0 0;\r\n`;\r\n\r\nconst BoardPage = () => {\r\n  const [comments, setComments] = useState(null);\r\n  const [commentApiError, setCommentApiError] = useState(null);\r\n  const [value, setValue] = useState();\r\n  const [postMessageError, setPostMessageError] = useState();\r\n  const [isLoadingPostMessage, setIsLoadingPostMessage] = useState(false);\r\n\r\n  const fetchComments = () => {\r\n    return fetch(API_ENDPOINT)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setComments(data);\r\n      })\r\n      .catch((error) => {\r\n        setCommentApiError(error.message);\r\n      });\r\n  };\r\n\r\n  const handleDeleteData = (id) => {\r\n    fetch(`https://student-json-api.lidemy.me/comments/${id}`, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then(() => fetchComments());\r\n  };\r\n\r\n  const handleTextareaFocus = (e) => {\r\n    setPostMessageError(null);\r\n  };\r\n\r\n  const handleTextareaChange = (e) => {\r\n    setValue(e.target.value);\r\n  };\r\n\r\n  const handleFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (isLoadingPostMessage) return;\r\n    setIsLoadingPostMessage(true);\r\n\r\n    fetch(\"https://student-json-api.lidemy.me/comments\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        nickname: \"yongchen\",\r\n        body: value,\r\n      }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setIsLoadingPostMessage(false);\r\n        if (data.ok === 0) {\r\n          setPostMessageError(data.message);\r\n        } else {\r\n          setValue(\"\");\r\n          fetchComments();\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        setIsLoadingPostMessage(false);\r\n        setPostMessageError(error.message);\r\n      });\r\n  };\r\n\r\n  useEffect(fetchComments, []);\r\n\r\n  return (\r\n    <>\r\n      {isLoadingPostMessage && <Loading>Loading ...</Loading>}\r\n      <Title>留言板</Title>\r\n\r\n      <MessageForm onSubmit={handleFormSubmit}>\r\n        <MessageTextarea\r\n          aria-label=\"minimum height\"\r\n          rowsMin={10}\r\n          placeholder=\"Minimum 3 rows\"\r\n          value={value}\r\n          onFocus={handleTextareaFocus}\r\n          onChange={handleTextareaChange}\r\n        />\r\n        <Grid container direction=\"row\" justify=\"flex-end\" alignItems=\"stretch\">\r\n          <SubmitButton type=\"submit\" variant=\"outlined\" color=\"primary\">\r\n            送出\r\n          </SubmitButton>\r\n        </Grid>\r\n        {postMessageError && <ErrorMessage>{postMessageError}</ErrorMessage>}\r\n      </MessageForm>\r\n      {commentApiError && (\r\n        <ErrorMessage>\r\n          Something went wrong!\r\n          <br></br>\r\n          {commentApiError.toString()}\r\n        </ErrorMessage>\r\n      )}\r\n      {comments && comments.length === 0 && <div>No message</div>}\r\n      <CommentList>\r\n        {comments &&\r\n          comments.map((message) => (\r\n            <Comment\r\n              key={message.id}\r\n              id={message.id}\r\n              author={message.nickname}\r\n              time={new Date(message.createdAt).toLocaleString()}\r\n              children={message.body}\r\n              handleDeleteData={handleDeleteData}\r\n            ></Comment>\r\n          ))}\r\n      </CommentList>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BoardPage;\r\n"],"sourceRoot":""}